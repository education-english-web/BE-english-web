// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUUIDInt is a mock of UUIDInt interface.
type MockUUIDInt struct {
	ctrl     *gomock.Controller
	recorder *MockUUIDIntMockRecorder
}

// MockUUIDIntMockRecorder is the mock recorder for MockUUIDInt.
type MockUUIDIntMockRecorder struct {
	mock *MockUUIDInt
}

// NewMockUUIDInt creates a new mock instance.
func NewMockUUIDInt(ctrl *gomock.Controller) *MockUUIDInt {
	mock := &MockUUIDInt{ctrl: ctrl}
	mock.recorder = &MockUUIDIntMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUUIDInt) EXPECT() *MockUUIDIntMockRecorder {
	return m.recorder
}

// NextID mocks base method.
func (m *MockUUIDInt) NextID() (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NextID")
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NextID indicates an expected call of NextID.
func (mr *MockUUIDIntMockRecorder) NextID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NextID", reflect.TypeOf((*MockUUIDInt)(nil).NextID))
}
