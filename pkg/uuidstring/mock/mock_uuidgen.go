// Code generated by MockGen. DO NOT EDIT.
// Source: uuidgen.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUUIDString is a mock of UUIDString interface.
type MockUUIDString struct {
	ctrl     *gomock.Controller
	recorder *MockUUIDStringMockRecorder
}

// MockUUIDStringMockRecorder is the mock recorder for MockUUIDString.
type MockUUIDStringMockRecorder struct {
	mock *MockUUIDString
}

// NewMockUUIDString creates a new mock instance.
func NewMockUUIDString(ctrl *gomock.Controller) *MockUUIDString {
	mock := &MockUUIDString{ctrl: ctrl}
	mock.recorder = &MockUUIDStringMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUUIDString) EXPECT() *MockUUIDStringMockRecorder {
	return m.recorder
}

// GetUUID mocks base method.
func (m *MockUUIDString) GetUUID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUUID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUUID indicates an expected call of GetUUID.
func (mr *MockUUIDStringMockRecorder) GetUUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUUID", reflect.TypeOf((*MockUUIDString)(nil).GetUUID))
}

// NewUUID mocks base method.
func (m *MockUUIDString) NewUUID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewUUID")
	ret0, _ := ret[0].(string)
	return ret0
}

// NewUUID indicates an expected call of NewUUID.
func (mr *MockUUIDStringMockRecorder) NewUUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewUUID", reflect.TypeOf((*MockUUIDString)(nil).NewUUID))
}
