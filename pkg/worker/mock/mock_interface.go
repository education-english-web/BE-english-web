// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	worker "github.com/education-english-web/BE-english-web/pkg/worker"
)

// MockWorkers is a mock of Workers interface.
type MockWorkers struct {
	ctrl     *gomock.Controller
	recorder *MockWorkersMockRecorder
}

// MockWorkersMockRecorder is the mock recorder for MockWorkers.
type MockWorkersMockRecorder struct {
	mock *MockWorkers
}

// NewMockWorkers creates a new mock instance.
func NewMockWorkers(ctrl *gomock.Controller) *MockWorkers {
	mock := &MockWorkers{ctrl: ctrl}
	mock.recorder = &MockWorkersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkers) EXPECT() *MockWorkersMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockWorkers) Run(job worker.Job) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Run", job)
}

// Run indicates an expected call of Run.
func (mr *MockWorkersMockRecorder) Run(job interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockWorkers)(nil).Run), job)
}
