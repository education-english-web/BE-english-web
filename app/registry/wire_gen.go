// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package registry

import (
	"github.com/education-english-web/BE-english-web/app/external/persistence/postgres"
	"github.com/education-english-web/BE-english-web/app/usecases"
	"github.com/education-english-web/BE-english-web/pkg/gormutil"
)

// Injectors from wire.go:

// InjectedInternalUserAddUsecase provides DI for the use case
func InjectedUserAddUsecase() usecases.UserAddUsecase {
	db := gormutil.GetDB()
	userRepository := postgres.NewUserRepository(db)
	timeFactory := NewTimeFactory()
	hashPass := NewHashPassword()
	userAddUsecase := usecases.NewUserAddUsecase(userRepository, timeFactory, hashPass)
	return userAddUsecase
}

// InjectedInternalUserMeUsecase provides DI for the use case
func InjectedUserMeUsecase() usecases.UserMeUsecase {
	db := gormutil.GetDB()
	userRepository := postgres.NewUserRepository(db)
	userMeUsecase := usecases.NewUserMeUsecase(userRepository)
	return userMeUsecase
}

// InjectedInternalUserLoginUsecase provides DI for the use case
func InjectedUserLoginUsecase() usecases.UserLoginUsecase {
	db := gormutil.GetDB()
	userRepository := postgres.NewUserRepository(db)
	userTokenRepository := postgres.NewUserTokenRepository(db)
	timeFactory := NewTimeFactory()
	uuidString := NewUUIDGenerator()
	hashPass := NewHashPassword()
	jwt := NewJWT()
	userLoginUsecase := usecases.NewUserLoginUsecase(userRepository, userTokenRepository, timeFactory, uuidString, hashPass, jwt)
	return userLoginUsecase
}

// InjectedInternalUserRefreshTokenUsecase provides DI for the use case
func InjectedUserRefreshTokenUsecase() usecases.RefreshTokenUsecase {
	db := gormutil.GetDB()
	userRepository := postgres.NewUserRepository(db)
	userTokenRepository := postgres.NewUserTokenRepository(db)
	timeFactory := NewTimeFactory()
	jwt := NewJWT()
	uuidString := NewUUIDGenerator()
	refreshTokenUsecase := usecases.NewUserRefreshTokenUsecase(userRepository, userTokenRepository, timeFactory, jwt, uuidString)
	return refreshTokenUsecase
}
